% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/legacy.R
\name{convert_legacyEmuDB_to_emuDB}
\alias{convert_legacyEmuDB_to_emuDB}
\title{Convert legacy EMU database to emuDB format}
\usage{
convert_legacyEmuDB_to_emuDB(emuTplPath, targetDir, dbUUID = UUIDgenerate(),
  options = NULL, verbose = TRUE)
}
\arguments{
\item{emuTplPath}{EMU template file path}

\item{targetDir}{target directory}

\item{dbUUID}{optional UUID of emuDB, will be generated by default}

\item{options}{list of options (see details)}

\item{verbose}{be verbose}
}
\description{
Converts an existing legacy EMU database to emuDB database structure. Converts the database configuration, copies or rewrites signal files and converts annotation data including hierarchical information.
}
\details{
The database will be converted if the legacy database template file \code{emuTplPath} could be found and successfully loaded and parsed. The legacy template file has usually the extension 'tpl'. The UUID of the new emuDB will be random generated by default. If \code{targetDir} does not exist the directory and its parents will be created. A new directory with the name of the database and the suffix '_emuDB' will be created in the \code{targetDir}. If the new database directory already exists the function stops with an error.
The template file is converted to a file named [dbName]_DBconfig.json. 
Some of the flags of the legacy EMU template files are ignored (lines of syntax: "set [flagName] [flagValue]", known ignored flag names are: 'LabelTracks','SpectrogramWhiteLevel','HierarchyViewLevels','SignalViewLevels'). 
Legacy EMU utterances are reorganized to sessions and bundles. The structure of the sessions depends on the wildcard path pattern of the primary track. At least one default session with name '0000' will be created.
Media files (usually WAV files) are copied, SSFF track files are rewritten using the ASSP library of package \code{wrassp} by default (see \link[wrassp]{read.AsspDataObj} \link[wrassp]{write.AsspDataObj}). Annotations in EMU hierarchy (.hlb) files and ESPS label files are converted to a [bundleName]_annot.json file per bundle (utterance).
Please note that only those files get copied, which match the scheme of the template file. Additional files in the legacy database directories are ignored. The legacy EMU database will not be modified.
For a detailed description of the emuDB database structure see \code{vignette(emuDB)}.

\code{options} is a list of key value pairs:

\code{rewriteSSFFTracks} if \code{TRUE} rewrite SSFF tracks instead of copying the file to get rid of big endian encoded SSFF files (SPARC), default: \code{TRUE}

\code{ignoreMissingSSFFTrackFiles} if \code{TRUE} missing SSFF track files are ignored, default: \code{TRUE}

\code{sourceFileTextEncoding} encoding of legacy database text files (template, label and hlb files), possible values: NULL, "latin1", "UTF-8" "bytes" or "unknown" :default \code{NULL} (uses encoding of operating system platform)

\code{symbolicLinkSignalFiles} if \code{TRUE} signal files are symbolic linked instead of copied. Implies: \code{rewriteSSFFTracks=FALSE}, Default: \code{FALSE}
}
\examples{
\dontrun{
## Convert legacy EMU database specified by EMU 
## template file /homes/mylogin/ae/ae.tpl to directory /homes/mylogin/EMUnew/
## and load it afterwards

convert_legacyEmuDB_to_emuDB("/homes/mylogin/ae/ae.tpl","/homes/mylogin/EMUnew/")
ae=load_emuDB("/homes/mylogin/EMUnew/ae")

## Convert database "ae" and do not rewrite SSFF tracks 

convert_legacyEmuDB_by_name_to_emuDB(
"ae",
"/homes/mylogin/EMUnew/",
options=list(rewriteSSFFTracks=FALSE)
)

## Convert legacy database "ae" from emuR demo data and load converted emuDB

create_emuRdemoData()
demoTplPath=file.path(tempdir(),"emuR_demoData/legacy_ae/ae.tpl")
targetDir=file.path(tempdir(),"converted_to_emuR")
convert_legacyEmuDB_to_emuDB(demoTplPath,targetDir)
dbName=load_emuDB(file.path(tempdir(),file.path(targetDir,"ae_emuDB")))

}

}
\author{
Klaus Jaensch
}
\seealso{
\code{\link{load_emuDB}}
}
\keyword{Emu}
\keyword{database}
\keyword{emuDB}
\keyword{schema}

