% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/requery.database.R
\name{requery_seq}
\alias{requery_seq}
\title{Requery sequential context of segment list}
\usage{
requery_seq(seglist, offset = 0, offsetRef = "START", length = 1,
  ignoreOutOfBounds = FALSE, dbUUID = NULL)
}
\arguments{
\item{seglist}{segment list to requery on (type: 'emuRsegs')}

\item{offset}{start offset in sequence}

\item{offsetRef}{reference element for offset: 'START' for first and 'END' for last element of segment list}

\item{length}{element length of returned segment list}

\item{ignoreOutOfBounds}{ignore result segments that are out of bundle bounds}

\item{dbUUID}{optional UUID of emuDB}
}
\value{
result set object of class 'emuRsegs'
}
\description{
Requery sequential context of segment list
}
\details{
Builds a new segment list on the same hierarchical level. The result segments may have different start position and length controlled by the \code{offset},\code{offsetRef} and \code{length} parameter.
\code{offsetRef} determines if the position offset is referenced to the start or the end item of the input list. Parameter \code{offset} determines the offset of the result start position to this reference item.
Parameter length sets the length of the result segments.
If the requested segments are out of bundle boundaries and parameter \code{ignoreOutOfBounds} is \code{TRUE} (the default) an error is generated. To get residual result segments that lie within the bounds the \code{ignoreOutOfBounds} parameter can be set to \code{TRUE}.
}
\examples{
\dontrun{

## Requery previous element of 'p' on phonetic level
sl1=query('ae','Phonetic=p')

requery_seq(sl1,offset=-1)

## Requery context (adding previuos and following elements) of 'p' on phonetic level

requery_seq(sl1,offset=-1,length=3)

## Requery previous element of n->t sequence
sl2=query('ae',"[Phoneme=n -> Phoneme=t]")

requery_seq(sl2,offset=-1)

## Requery last element of n->t sequence

requery_seq(sl2,offsetRef='END')

## Requery following element of n->t sequence

requery_seq(sl2,offset=1,offsetRef='END')

## Requery context (previuos and following) of n->t sequence

requery_seq(sl2,offset=-1,length=4)

## Requery next word contexts (sequence includes target word)

sl3=query('ae',"Text=to")
requery_seq(sl3,length=2)

## Requery following two word contexts, ignoring segment 
## sequences that are out of bundle end bounds 
requery_seq(sl3,length=3,ignoreOutOfBounds=TRUE)

}
}
\author{
Klaus Jaensch
}
\seealso{
\code{\link{query}} \code{\link{emuRsegs}}
}
\keyword{database}
\keyword{emuDB}
\keyword{requery}

