% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.DBconfig.R
\name{add_ssffTrackDefinition}
\alias{add_ssffTrackDefinition}
\title{Add ssffTrackDefinition to emuDB}
\usage{
add_ssffTrackDefinition(dbName, name, columnName = NULL,
  fileExtension = NULL, onTheFlyFunctionName = NULL,
  onTheFlyParams = NULL, onTheFlyOptLogFilePath = NULL, dbUUID = NULL,
  showProgress = TRUE, interactive = TRUE)
}
\arguments{
\item{dbName}{name of emuDB}

\item{name}{name of ssffTrackDefinitions}

\item{columnName}{columnName of ssffTrackDefinitions.
If the \code{onTheFlyFunctionName} parameter is set and this one isn't the
\code{columnName} will default to the first entry in \code{wrasspOutputInfos[[onTheFlyFunctionName]]$tracks}.}

\item{fileExtension}{fileExtension of ssffTrackDefinitions.
If the \code{onTheFlyFunctionName} parameter is set and this one isn't the
\code{fileExtension} will default to the first entry in \code{wrasspOutputInfos[[onTheFlyFunctionName]]$ext}.}

\item{onTheFlyFunctionName}{name of wrassp function to do on-the-fly calculation. See \code{names(wrasspOutputInfos)}
for a list of all the signal processing functions provided by the wrassp package.}

\item{onTheFlyParams}{a list of parameters that will be given to the function 
passed in by the onTheFlyFunctionName parameter. This list can easily be 
generated using the \code{formals} function on the according signal processing function 
provided by the wrassp package and then setting the
parameter one wishes to change.}

\item{onTheFlyOptLogFilePath}{path to optional log file for on-the-fly function}

\item{dbUUID}{optional UUID of emuDB}

\item{showProgress}{show progress bar}

\item{interactive}{ask user for confirmation}
}
\description{
Add new ssffTrackDefinitions to emuDB. 
An ssffTrack (often simply referred to as a track) references 
data that is stored in the Simple Signal File Format (SSFF) 
in the according bundle folders. The two most common types of data are:
\itemize{
\item{complementary data that was acquired during the recording 
such as data acquired during electromagnetic 
articulographic (EMA) or electropalatography (EPG) recordings;}
\item{derived data, i.e. data that was calculated from the original audio signal 
such as formant values and their bandwidths or the short-term Root Mean Square amplitude of the signal.}
}
For more information on the structural elements of an emuDB see \code{vignette(emuDB)}.
}
\examples{
\dontrun{

##################################
# prerequisite: loaded "ae" emuDB 
# (see ?load_emuDB for more information)

# add ssffTrackDefinition to "ae" emuDB
# calculating the according SSFF files on-the-fly
# using the wrassp function "zcrana" (zero-crossing-rate analysis)
add_ssffTrackDefinition(dbName = "ae",
                        name = "ZCRtrack",
                        onTheFlyFunctionName = "zcrana")
                        
# add ssffTrackDefinition to "ae" emuDB
# for SSFF files that will be added later (either
# by adding files to the emuDB using 
# the add_files() function or by calculating
# them using the according function provided 
# by the wrassp package)
add_ssffTrackDefinition(dbName = "ae",
                        name = "formants",
                        columnName = "fm",
                        fileExtension = "fms")

}

}
\seealso{
wrasspOutputInfos
}

