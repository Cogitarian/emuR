% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_trackdata.R
\name{get_trackdata}
\alias{emu.track}
\alias{get_trackdata}
\title{Get trackdata from loaded emuDB}
\usage{
get_trackdata(dbName, seglist = NULL, ssffTrackName = NULL, cut = NULL,
  npoints = NULL, onTheFlyFunctionName = NULL, onTheFlyParams = NULL,
  onTheFlyOptLogFilePath = NULL, nrOfAllocationRows = 10000,
  dbUUID = NULL, resultType = "trackdata", verbose = TRUE)
}
\arguments{
\item{dbName}{Name of loaded emuDB}

\item{seglist}{\code{\link{emuRsegs}} or \code{\link{emusegs}} object obtained by \code{\link{query}}ing a loaded emuDB}

\item{ssffTrackName}{The name of track that one wishes to extract (see 
\code{\link{list_ssffTrackDefinitions}} for the defined ssffTracks of the 
emuDB). If the parameter \code{onTheFlyFunctionName} is set then 
this corresponds to the column name af the AsspDataObj (see
\code{wrasspOutputInfos[[onTheFlyFunctionName]]$tracks} and \code{\link{wrasspOutputInfos}}). 
If the parameter \code{onTheFlyFunctionName} is set and this one isn't then per default
the fist track listed in the \code{wrasspOutputInfos} is chosen (\code{wrasspOutputInfos[[onTheFlyFunctionName]]$tracks[1]}).}

\item{cut}{An optional cut time for segment data, ranges between 
0 and 1, a value of 0.5 will extract data only at the segment midpoint.}

\item{npoints}{An optional number of points to retrieve for each segment or event. 
For segments this requires the \code{cut} parameter to be set and then data is extracted around the resulting cut time. 
For events data is extracted around the event time. If npoints is an odd number the 
samples are centered around the cut-time-sample, if not they are sqewed to the
right by one sample.}

\item{onTheFlyFunctionName}{Name of wrassp function that will perform the on-the-fly calculation}

\item{onTheFlyParams}{A list parameters that will be given to the function 
passed in by the \code{onTheFlyFunctionName} parameter. This list can easily be 
generated using the \code{formals} function and then setting the according 
parameter one wishes to change.}

\item{onTheFlyOptLogFilePath}{Path to optional log file for on-the-fly function}

\item{nrOfAllocationRows}{If this size limit of the data matrix is reached 
a further \code{nrOfAllocationRows} more rows will be allocated. As this allocation leads to
a performance penalty one should consider increasing this number for large emuDBs.}

\item{dbUUID}{Optional UUID of emuDB}

\item{resultType}{Specify class of returned object. Either 'emuRtrackdata' or 'trackdata'.}

\item{verbose}{Show progress bars and further information}
}
\value{
If \code{dcut} is not set (the default) an object of type trackdata 
is returned. If \code{dcut} is set and \code{npoints} is not, or the seglist 
is of type event and npoints is not set a data.frame is returned
}
\description{
Extract trackdata information from a loaded emuDB that 
corresponds to the entries in a segment list.
}
\details{
This function utilizes the wrassp package for signal processing and 
SSFF/audio file handling. It reads time relevant data from a given 
segmentlist, extracts the specified trackdata and places it into a 
trackdata object (analogous to the depricated \code{emu.track}). This function
replaces the depricated \code{emu.track} function.
}
\examples{
\dontrun{
## query loaded 'ae' emuDB for all 'i:' segments of the Phonetic level
sl = query('ae', "Phonetic=i:")

## get the corresponding formant trackdata
td = get_trackdata(dbName = 'ae', seglist = sl, ssffTrackName = 'fm')

## get the corresponding F0 trackdata
# as there is no F0 ssffTrack defined in the 'ae' emuDB we will 
# calculate the necessary values on-the-fly
td = get_trackdata(dbName = 'ae', seglist = sl, onTheFlyFunctionName = 'ksvF0')
}
}
\author{
Raphael Winkelmann
}
\seealso{
\code{\link{formals}}, \code{\link{wrasspOutputInfos}}, \code{\link{trackdata}}
}
\keyword{misc}

